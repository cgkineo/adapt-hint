.hint {
  margin-bottom: @btn-margin;
  
  &__btn {
    display: flex;
    align-items: center;
  }

  &__btn.align-icon-right {
    flex-direction: row-reverse;
  }
}

// --------------------------------------------------
// THEME
// --------------------------------------------------
// @item-ui-color-style fallback if Vanilla button styles aren't supported
@item-ui-color-style: none;

.hint {

  // buttons with text and icon (left aligned icon as default)
  // --------------------------------------------------
  &__btn.btn-icon:not(.align-icon-right).btn-text &__btn-icon + &__btn-text {
    padding-left: (@icon-padding / 2);

    .dir-rtl & {
      padding-left: 0;
      padding-right: (@icon-padding / 2);
    }
  }

  // buttons with text and icon (right aligned icon)
  // --------------------------------------------------
  &__btn.btn-icon.align-icon-right.btn-text &__btn-text {
    padding-right: (@icon-padding / 2);

    .dir-rtl & {
      padding-left: (@icon-padding / 2);
      padding-right: 0;
    }
  }

  &__btn.btn-icon,
  &__btn.btn-text {
    // apply legacy styles if Vanilla button styles aren't supported
    & when (@item-ui-color-style = none) {
      background-color: @item-color;
      color: @item-color-inverted;
  
      .no-touch &:hover {
        background-color: @item-color-hover;
        color: @item-color-inverted-hover;
        .transition(background-color @duration ease-in, color @duration ease-in;);
      }
    }
    
    & when (@item-ui-color-style = filled) {
      .item-ui-color;
  
      .no-touch &:hover {
        .item-ui-color-hover;
      }

      html:not(.a11y-disable-focusoutline) &:focus-visible {
        .item-ui-color-focus;
      }
    }

    & when (@item-ui-color-style = outline) {
      .item-ui-color-outline;
  
      .no-touch &:hover {
        .item-ui-color-outline-hover;
      }

      html:not(.a11y-disable-focusoutline) &:focus-visible {
        .item-ui-color-outline-focus;
      }
    }
  }
}

